{"version":3,"sources":["webpack:///./node_modules/_base64-js@1.3.1@base64-js/index.js","webpack:///./node_modules/_core-js@3.6.5@core-js/modules/es.array.map.js","webpack:///./src/api/naire.ts","webpack:///./node_modules/_isarray@1.0.0@isarray/index.js","webpack:///./node_modules/_ieee754@1.1.13@ieee754/index.js","webpack:///./node_modules/_buffer@4.9.2@buffer/index.js"],"names":["exports","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","$","$map","map","arrayMethodHasSpeciesSupport","arrayMethodUsesToLength","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","target","proto","forced","callbackfn","this","arguments","undefined","list","get","create","data","post","headers","statis","sourceData","crossanalysis","questions","detail","submit","changeStatus","submitStatistic","changeTime","del","toString","module","isArray","call","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","base64","ieee754","typedArraySupport","__proto__","prototype","foo","subarray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","from","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","checked","string","isEncoding","actual","slice","fromArrayLike","array","byteOffset","obj","isBuffer","copy","isnan","type","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","n","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","buf","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","decodeCodePointsArray","INSPECT_MAX_BYTES","global","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","pos","swap16","swap32","swap64","apply","equals","inspect","str","max","match","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","base64clean","stringtrim","replace","trim","units","leadSurrogate","byteArray","hi","lo","src","dst"],"mappings":"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","file":"js/chunk-f186f486.c306be91.js","sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('map');\n\n// `Array.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","import request from '@/utils/request'\nimport { IApiNaireSourceData, IApiNaireStatisticResult, IApiNaireItem } from './types'\n\n/**\n * 问卷列表\n */\nexport const list = () => {\n  return request.get<IApiNaireItem[]>('/naire', {})\n}\n\n/**\n * 创建问卷\n * @param data\n */\nexport const create = (data: {\n  naire: Questionnaire.INaire,\n  status: string\n}) => {\n  return request.post<any>('/naire/save', data, {\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  })\n}\n\n/**\n * 问卷统计\n * @param data\n */\nexport const statis = (data: {\n  n_id: string\n}) => {\n  return request.post<IApiNaireStatisticResult>('/naire/statis', data, {\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  })\n}\n\n/**\n * 样本数据\n * @param data\n */\n\nexport const sourceData = (data: {\n  n_id: string\n  current: number,\n    page_size: number\n}) => {\n  return request.get<IApiNaireSourceData>('/naire/sourcedata', data)\n}\n\n/**\n * 交叉分析\n * @param data\n */\n\nexport const crossanalysis = (data: {\n  n_id: string\n  x_id: number | string,\n  y_id: number | string\n}) => {\n  return request.post<any>('/naire/crossanalysis', data, {\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  })\n}\n\n/**\n * 交叉分析\n * @param data\n */\nexport const questions = (data: {\n  n_id: string\n}) => {\n  return request.post<any>('/naire/questions', data, {\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  })\n}\n\n/**\n * 问卷详情\n * @param data\n */\nexport const detail = (data: {\n  n_id: string\n  type: 'normal'\n}) => {\n  return request.post<any>('/naire/detail', data, {\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  })\n}\n\n/**\n * 提交问卷\n * @param data\n */\nexport const submit = (data: {\n  nId: string,\n  result: any,\n  userId: string\n}) => {\n  return request.post<any>('/naire/submit', data, {\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  })\n}\n\n/**\n * 发布/停止发布\n * @param data\n */\nexport const changeStatus = (data: {\n  n_id: string\n}) => {\n  return request.get<any>('/naire/changeStatus', data)\n}\n\n/**\n * 回收情况\n * @param data\n */\nexport const submitStatistic = (data: {\n  n_id: string,\n  current: number,\n  page_size: number,\n  status: number,\n  u_class:string\n}) => {\n  return request.get<any>('/naire/submitStatis', data)\n}\n\n/**\n * 修改截止时间\n * @param data\n */\nexport const changeTime = (data: {\n  n_id: string\n  n_deadline: number\n}) => {\n  return request.post<any>('/naire/changeTime', data)\n}\n\n/**\n * 删除问卷\n * @param data\n */\nexport const del = (data: {\n  n_id: string\n}) => {\n  return request.get<any>('/naire/del', data)\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n"],"sourceRoot":""}